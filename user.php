<?php
//include_once("./database.php");


class User {
    public $userId;
    public $username;
    public $nickname;
    public $lvl; // rank
    public $title; // rank
    public $exp; // = nKill
    public $KDratio;
    public $nKill;
    public $nDeath;
    public $mostUsed; // most used weapon
    public $mostKilled; // user that this user kill the most
    public $rankingScore;  // score = KDRatio*EXP/maxEXP
    public $facebookID;  // score = KDRatio*EXP/maxEXP

    // headshotstat ref only
    public $nHeadShot;
    public $nShotNoHead;
    public $listGunHeadShot;


    public $lastRank;
    public $listKill;
    public $listUsed;

    public function __construct() {
        $this->username = "";
        $this->nickname = "";
        $this->listKill =array("Nobita");
        $this->listUsed =array("knife");
        $this->nHeadShot=0;
        $this->nShotNoHead=1;
    }
    public function setInfo($userId, $userName, $nickname,$facebookID, $nKill, $nDie) {
         $listGun = ["knife","glock","usp","p228","deagle","fn57","elites","m3","xm1014","tmp","mac10","mp5","ump45",
                                "p90","galil","famas","ak47","m4a1","sg552","aug","scout","sg550","awp","g3sg1","m249"];
        $lookupGun = [
            "knife"=>"KINFE",
            "glock"=>"Glock18",
            "usp"=>" USP .45",
            "p228"=>"SIG P228",
            "deagle"=>"Desert Eagle",
            "fn57"=>"FN Five-Seven",
            "elites"=>"Dual Beretta",
            "m3"=>"Benelli M3",
            "xm1014" => "Benelli XM1014",
            "tmp"=>"Tactical Machine Pistol",
            "mac10"=>"Ingram MAC-10",
            "mp5"=>"MP5-Navy",
            "ump45"=>" UMP45",
            "p90"=>"FN P90",
            "galil"=>"IMI Galil",
            "famas"=>"FAMAS",
            "ak47"=>"AK=47",
            "m4a1"=>"M4a1",
            "sg552"=>"Sig SG-552",
            "aug"=>"Steyr Aug",
            "scout"=>"Steyr Scout",
            "sg550"=>"Sig SG-550 Sniper",
            "awp"=>"AWP Magnum",
            "g3sg1"=>"G3SG1",
            "m249"=>"M249 "
        ];
        
        $nGun = count ($listGun);

        $this->userId = $userId;
        $this->username = $userName;
        $this->nickname = $nickname;
        $this->mostUsed =  $listGun[rand(0,$nGun-1)];
        $this->mostKilled = "Nobita";  // random at the moment
        $this->nKill = $nKill;
        $this->nDeath = $nDie;
        $this->exp = $nKill;
        $this->facebookID = $facebookID;
    }
    public function setKDRatio() {
      # also update EXP
       $this->exp = $this->nKill;

        if ($this->nDeath == 0) return 0;
        $this->KDratio = round($this->nKill / $this->nDeath, 2);
        return $this->KDratio;
    }
    public function calculateLvl() {
        $listTitle = ["Silver I", "Silver II", "Silver III", "Silver IV", "Silver Elite", "Silver Elite Master", "Gold Nova I", "Gold Nova II", "Gold Nova III", "Gold Nova Master", "Master Guardian I", "Master Guardian II", "Master Guardian Elite", "Distinguished Master Guardian", "Legendary Eagle", "Legendary Eagle Master", "Supreme Master First Class", "The Global Elite", ];
        $lookupEXP = [0,20,60,120,200,300,420,560,720,900,1100,1320,1560,1820,2100,2400,2720,3060];  // generated by rankingSample()  wwith step   = 7
        $lvl = 0;
        $nLevel = 17;
        if ($this->exp > $lookupEXP[$nLevel]) {
            $this->lvl = $nLevel;
        } else {
            for ($lvl = 1;$lvl < $nLevel;$lvl++) if ($this->exp <= $lookupEXP[$lvl]) break;
        }
        $this->title = $listTitle[$lvl-1];
        $this->lvl = $lvl-1;
    }


    public function getTitle() {
        return $this->title;
    }
    public function getTitleImg() {
        $urlIMG = "lib/";
        $urlIMG.= $this->lvl;
        return $urlIMG . ".jpg";
    }

    public function getWeaponImg() {
    
        $urlIMG = "lib/Weapon_";
        $urlIMG.= $lookupGun[$this->mostUsed];
        return $urlIMG . ".jpg";
    }
    public function print () {
        echo "ID: " . $this->userId . "</br>";
        echo "username: " . $this->username . "</br>";
        echo "nickName: " . $this->nickname . "</br>";
        echo "nKill: " . $this->nKill . "</br>";
        echo "nDeath: " . $this->nDeath . "</br>";
        if ($this->nDeath != 0) echo "KDratio: " . round($this->nKill / $this->nDeath, 2) . "</br>";
    }
}
?>

<?php
#process database
// also as init for those weeks have no log
function readListUser(&$listUserName, $fileName = "listUser.txt") {
    //$listUser = array();
    $mapping = array();
    if (($handle = fopen($fileName, "r")) !== FALSE) {
        while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
            $user = new User();
            //$data = str_replace(" ", "",$data);
            $user->setInfo($data[0], $data[1], $data[2], $data[3], $data[5], $data[6]); // 3 fiels ID, name, nickname
            //$listUser[] = $user;
            $listUserName[] = $user->nickname;
            $mapping[$user->nickname] = $user;
        }
        fclose($handle);
    }
    //var_dump($listUserName);
    //var_dump( $mapping["Minh"]);
    return $mapping;
}

function getStatHeadShot(&$mappingUser, $fileName = "logRank/logHeadShot.txt") {
    //$listUser = array();
    $keyword = "headshot";
    $myfile = fopen($fileName, "r") or die("Unable to open file!");
    $i = 0;
    while (!feof($myfile)) {
        $line = fgets($myfile);
        if (strpos($line, "killed") !== false && strpos($line, $keyword) == false) {
           $line = str_replace("CSC| Player","QUI",$line);
            //another TuanAnh vs huy
            $line = str_replace("Fake_Huy","TA",$line);
            $line = str_replace("fake_HUY","TA",$line);
            $line = str_replace("fake_Huy","TA",$line);
            $line = str_replace("real_Huy","Eternity_HUY",$line);
            $line = str_replace("Real_Huy","Eternity_HUY",$line);
            $line = str_replace("Fake_TuanAnh","Eternity_HUY",$line);
            $line = str_replace("CSC| Shinichi","CSC | Shinichi",$line);
          list($user, $rest) = explode(" killed", $line);
          $mappingUser[$user]->nShotNoHead++;

        }
        if (strpos($line, $keyword) !== false) {
            
            $line = preg_replace("/<+[a-zA-Z0-9._:]+>/", '',$line);
            // a Qui
            $line = str_replace("CSC| Player","QUI",$line);
            $line = str_replace("Vu Vu","Vu_Vu",$line);
            $line = str_replace("CSC| Shinichi","CSC_|_Shinichi",$line);
            $line = str_replace("Gank by Wife","Gank_by_Wife",$line);
            //another TuanAnh vs huy
            $line = str_replace("Fake_Huy","TA",$line);
            $line = str_replace("fake_HUY","TA",$line);
            $line = str_replace("fake_Huy","TA",$line);
            $line = str_replace("real_Huy","Eternity_HUY",$line);
            $line = str_replace("Real_Huy","Eternity_HUY",$line);
            $line = str_replace("Fake_TuanAnh","Eternity_HUY",$line);

            list($star, $user, $killedWord, $killedUser, $with, $a, $headshot, $from, $gun, $star) = explode(" ", $line);
            //echo $i." ". $user.",".$killedWord.",".$killedUser.",".$with.",".$gun."<br>";

            //for TAnh
            if (strpos($user, "TA") !== false)
              $user = "TA";
            if (strpos($killedUser, "TA") !== false)
              $killedUser = "TA";

            if (strcmp($user, "Vu_Vu")==0  || strcmp($user, "CSC_|_Shinichi")==0 || strcmp($user, "Gank_by_Wife")==0)
              $user = str_replace("_"," ",$user);
            
            $mappingUser[$user]->nHeadShot++;
            $gun = str_replace("\n","",$gun);
            $mappingUser[$user]->listGunHeadShot[] =  $gun;

            $i++;
        }
    }
    fclose($myfile);
}

function printListUser($mappingUser, $listUserName) {
    $n = count($mappingUser);
    for ($i = 0;$i < $n;$i++) {
        $user = $mappingUser[$listUserName[$i]];
        $user->print();
        echo "</br>";
    }
}
// processLogfile save to Match File
function convertLogFileToMatchFile($fileLog) {
    $fileName = "log/" . $fileLog . ".log";
    $myfile = fopen($fileName, "r") or die("Unable to open file!");
    $keyword = "killed";
    $outMatchFileName = "log/" . $fileLog . ".match";
    $outMatchFile = fopen($outMatchFileName, "w");
    $i = 0;
    while (!feof($myfile)) {
        $line = fgets($myfile);
        if (strpos($line, $keyword) !== false) {
              $line = preg_replace("/<+[a-zA-Z0-9._:]+>/", '',$line);
            // a Qui
            $line = str_replace("CSC| Player","QUI",$line);
            $line = str_replace("CSC| Shinichi","CSC | Shinichi",$line);
            //another TuanAnh vs huy
            $line = str_replace("fake_HUY","TA",$line);
            $line = str_replace("fake_Huy","TA",$line);
            $line = str_replace("real_Huy","Eternity_HUY",$line);
            $line = str_replace("Real_Huy","Eternity_HUY",$line);
            $line = str_replace("Fake_TuanAnh","Eternity_HUY",$line);

            list($time, $user, $killedWord, $killedUser, $with, $gun) = explode("\"", $line);
            //echo $i." ". $user.",".$killedWord.",".$killedUser.",".$with.",".$gun."<br>";

            //TAnh
            if (strpos($user, "TA") !== false)
              $user = "TA";
            if (strpos($killedUser, "TA") !== false)
              $killedUser = "TA";
            
            fwrite($outMatchFile, $user . "," . $killedWord . "," . $killedUser . "," . $with . "," . $gun . "\n");
            $i++;
        }
    }
    fclose($myfile);
    fclose($outMatchFile);
}
// process all logFile To Match File
function processLogFiles() {
    $dir = 'log/';
    $listFile = scandir($dir, 1);
    $keyword = ".log";
    foreach ($listFile as $logFile) {
        if (strpos($logFile, $keyword) !== false) {
            //echo $logFile. "<br>";
            // get log name
            $logFile = str_replace(".log", "", $logFile);
            //create match file
            convertLogFileToMatchFile($logFile);
        }
    }
}
function updateRankingFromSingleMatchFile($matchFileName, &$mappingUser, $listUserName) {
    $totalKill = 0;
    $totalDeath = 0;
    $matchFileName = "log/" . $matchFileName;
    $matchFile = fopen($matchFileName, "r") or die("Unable to open file!");
    $totalLine = 0;
    while (!feof($matchFile)) {
        $line = fgets($matchFile);
        if (strlen($line) == 0) continue;
        $totalLine++;
        list($user, $killedWord, $killedUser, $with, $gun) = explode(",", $line);
        
        if (in_array($user, $listUserName))
          {$mappingUser[$user]->nKill++; $totalKill++;}
          else 
            echo $user."<br>";

        if (in_array($killedUser, $listUserName))
         {$mappingUser[$killedUser]->nDeath++;$totalDeath++;}
        else 
            echo $killedUser."<br>";

          // check most Kill, most Used
        if (in_array($user, $listUserName))
           if (in_array($killedUser, $listUserName))
            $mappingUser[$user]->listKill[] = $killedUser;
           $gun = str_replace("\n","",$gun);
          $mappingUser[$user]->listUsed[] = $gun;
         }

         
    if ($totalKill!=$totalDeath)
      echo $matchFileName." " .$totalKill. " " . $totalDeath." ".$totalLine. " "."NON MATCH!!!!!<br>";

    fclose($matchFile);
}
function processRankingFromSingleMatch($mappingUser, $listUserName) {
    $dir = 'log/';
    $listFile = scandir($dir, 1);
    $keyword = ".match";
    foreach ($listFile as $matchFile) {
        if (strpos($matchFile, $keyword) !== false) {
            //echo $matchFile. "<br>";
            updateRankingFromSingleMatchFile($matchFile, $mappingUser, $listUserName);
        }
    }
}
function cmp($a, $b) {
    return ($a->rankingScore <= $b->rankingScore);
}
function ranking(&$mappingUser) {
    // update before ranking
    
    $maxEXP = -1;

    foreach ($mappingUser as $user) {
      $user->calculateLvl();
      $user->setKDRatio();

      if ($user->exp > $maxEXP )
        $maxEXP = $user->exp;
    }

     foreach ($mappingUser as $user) {
      $user->calculateLvl();
      $user->setKDRatio();

      if ($user->exp > $maxEXP )
        $maxEXP = $user->exp;
    }

     foreach ($mappingUser as $user) {
       $user->rankingScore = $user->KDratio*(0.5+0.5*$user->exp/$maxEXP);
    }
   
    usort($mappingUser, "cmp");
}
function rankingSample() {
    $nLevel = 18;
    $stepEXP = 20;
    $total = 0;
    for ($i = 0;$i < $nLevel;$i++) {
        $dif = $i * $stepEXP;
        $total+= $dif;
        echo $total . ",";
    }
}



function exportRankEveryWeek($week,$mappingUser){
  $outMatchFileName = "logRank/week_" . $week. "_rank.csv";
   $outMatchFile = fopen($outMatchFileName, "w");
   $rank =1 ;
  foreach ($mappingUser as $user) {
       fwrite($outMatchFile,$user->userId. "," .$user->username. "," .$user->nickname. "," .$rank.",\n");
       $rank++;
    }

    fclose($outMatchFile);
}

function createFinalRankFile($nWeek,$listUserName){
   
    $dir = 'logRank/';
    $keyword = ".csv";
    $fileOutName = "rank.csv";
    $fileOut = fopen($fileOutName, "w");

    $finalRank = [];
    for ($i =0 ; $i< count($listUserName);  $i++) {
      $finalRank[$i] = array();
      $finalRank[$i][] = 8;
    }

    for ($i=1; $i<=$nWeek; $i++) {
        $rankFileName =  $dir."week_".$i."_rank.csv";
          $rankFile = fopen($rankFileName, "r");

          while (!feof($rankFile)){
            $line = fgets($rankFile);
            if (strlen($line)==0) continue;
            list($id, $username, $nickname, $rank) = explode(",", $line);
            $rank = (int)(str_replace("\n","",$rank));
             $finalRank[$id][] = $rank;
            }
            fclose($rankFile);
    }
    for ($i=0; $i < 19; $i++){
      $str="";
      $str.= $i.",";
      $str.= $listUserName[$i].",";
      $str.= $listUserName[$i]."";

      for ($j=0; $j <=$nWeek;$j++)
        $str.= ",".$finalRank[$i][$j];
      $str.= "\n";
      fwrite($fileOut,$str);
      
    }

    fclose($fileOut);
  }

?>